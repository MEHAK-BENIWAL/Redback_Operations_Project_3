#include <Wire.h>
#include <Adafruit_Sensor.h>
#include <Adafruit_ADXL345_U.h>
#include <ESP8266WiFi.h>
#include <SoftwareSerial.h>

#define THRESHOLD_X 2.0
#define THRESHOLD_Y 2.0
#define THRESHOLD_Z 10.0

Adafruit_ADXL345_Unified accel = Adafruit_ADXL345_Unified(12345); // Change the address if necessary

const char* ssid = "YourWiFiSSID";
const char* password = "YourWiFiPassword";

SoftwareSerial bluetoothSerial(2, 3); // RX, TX pins for Bluetooth module

void setup(void) {
  Serial.begin(9600);
  bluetoothSerial.begin(9600);

  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }

  if (!accel.begin()) {
    Serial.println("Could not find a valid ADXL345 sensor, check wiring!");
    while (1);
  }
}

void loop(void) {
  sensors_event_t event;
  accel.getEvent(&event);

  float accelerationX = event.acceleration.x;
  float accelerationY = event.acceleration.y;
  float accelerationZ = event.acceleration.z;

  if (accelerationX > THRESHOLD_X || accelerationX < -THRESHOLD_X ||
      accelerationY > THRESHOLD_Y || accelerationY < -THRESHOLD_Y ||
      accelerationZ > THRESHOLD_Z || accelerationZ < -THRESHOLD_Z) {
    Serial.println("Fall detected!");
    
    // WiFi notification
    String message = "Fall detected!";
    sendWiFiNotification(message);

    // Bluetooth notification
    bluetoothSerial.println("Fall detected!");
  }

  delay(100);
}

void sendWiFiNotification(String message) {
  WiFiClient client;
  if (client.connect("your-notification-server.com", 80)) {
    client.print("GET /notify?message=" + message + " HTTP/1.1\r\n" +
                 "Host: your-notification-server.com\r\n" +
                 "Connection: close\r\n\r\n");
    delay(10);
    client.stop();
  }
}
